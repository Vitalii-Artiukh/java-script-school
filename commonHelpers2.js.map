{"version":3,"file":"commonHelpers2.js","sources":["../src/js/lesson.js"],"sourcesContent":["// function checkStorage(available, ordered) {\n//   if (available < ordered) {\n//     console.log(\"Not enough goods in stock!\");\n//     return \"Not enough goods in stock!\";\n//   } else {\n//     console.log(\"Order is processed, our manager will contact you\");\n//     return \"Order is processed, our manager will contact you\";\n//   }\n// }\n\n// checkStorage(10, 15);\n// checkStorage(20, 15);\n\n// function checkStorage(available, ordered) {\n//   if (ordered === 0) {\n//     console.log(\"There are no products in the order!\");\n//     return \"There are no products in the order!\";\n//   } else if (ordered > available) {\n//     console.log(\n//       \"Your order is too large, there are not enough items in stock!\"\n//     );\n//     return \"Your order is too large, there are not enough items in stock!\";\n//   } else {\n//     console.log(\"The order is accepted, our manager will contact you\");\n//     return \"The order is accepted, our manager will contact you\";\n//   }\n// }\n\n// checkStorage(10, 0);\n\n//////////////////////////////////////////\n\n// const age = 17;\n// const type = age >= 18 ? \"adult\" : \"child\";\n// console.log(type);\n\n/////////////////////////////////////////\n\n// function checkPassword(password) {\n//   const correctPassword = \"jqueryismyjam\";\n//   console.log(correctPassword === password);\n//   return correctPassword === password\n//     ? \"Access granted\"\n//     : \"Access denied, wrong password!\";\n// }\n\n// checkPassword(\"jqueryismyjam\");\n\n////////////////////////////////////||\n\n// const day = 8;\n\n// switch (day) {\n//   case 1:\n//   case 2:\n//   case 3:\n//   case 4:\n//   case 5:\n//     console.log(\"This is a working day\");\n//     break;\n//   case 6:\n//   case 7:\n//     console.log(\"It is a day off\");\n//     break;\n//   default:\n//     console.log(\"Invalid\");\n// }\n\n///////////////////////////////////////////////\n\n// function getSubscriptionPrice(type) {\n//   switch (type) {\n//     case \"starter\":\n//       console.log(0);\n//       return 0;\n//       break;\n\n//     case \"professional\":\n//       console.log(20);\n//       return 20;\n//       break;\n\n//     case \"organization\":\n//       console.log(50);\n//       return 50;\n//       break;\n\n//     default:\n//       console.log(\"Invalid subscription type!\");\n//       return \"Invalid subscription type!\";\n//   }\n// }\n\n// getSubscriptionPrice(\"ccc\");\n\n///////////////////////////////////////\n\n// function isNumberInRange(start, end, number) {\n//   if (number >= start && number <= end) {\n//     console.log(number + \"true\");\n//     return true;\n//   } else {\n//     console.log(number + \"false\");\n//     return false;\n//   }\n// }\n\n// isNumberInRange(10, 30, 17);\n// isNumberInRange(10, 30, 9);\n// isNumberInRange(20, 50, 24);\n// isNumberInRange(10, 30, 76);\n\n///////////////////////////////////////\n\n// function checkAccess(subType) {\n//   if (subType === \"pro\" || subType === \"vip\") {\n//     console.log(true);\n//     return true;\n//   } else {\n//     console.log(false);\n//     return false;\n//   }\n// }\n\n// checkAccess(\"pro\");\n// checkAccess(\"starter\");\n// checkAccess(\"vip\");\n// checkAccess(\"free\");\n\n///////////////////////////////////\n\n// function toggleModalVisibility(isVisible) {\n//   console.log(!isVisible);\n//   return !isVisible;\n// }\n\n// toggleModalVisibility(true);\n// toggleModalVisibility(false);\n\n////////////////////////////////////\n\n// function getSubstring(string, length) {\n//   console.log(string.slice(0, length));\n//   return string.slice(0, length);\n// }\n\n// getSubstring(\"Hello world\", 3);\n// getSubstring(\"Hello world\", 5);\n// getSubstring(\"Hello world\", 8);\n// getSubstring(\"Hello world\", 11);\n// getSubstring(\"Hello world\", 0);\n\n/////////////////////////////////////\n\n// function normalizeInput(input, to) {\n//   if (to === \"upper\") {\n//     console.log(input.toUpperCase());\n//     return input.toUpperCase();\n//   } else {\n//     console.log(input.toLowerCase());\n//     return input.toLowerCase();\n//   }\n// }\n\n// normalizeInput(\"This ISN'T SpaM\", \"lower\");\n// normalizeInput(\"This ISN'T SpaM\", \"upper\");\n// normalizeInput(\"Big SALE\", \"lower\");\n// normalizeInput(\"Big SALE\", \"upper\");\n// normalizeInput(\"Stay Awhile and Listen\", \"lower\");\n// normalizeInput(\"Stay Awhile and Listen\", \"upper\");\n\n///////////////////////////////////////\n\n// function checkForName(fullName, firstName) {\n//   const lowerFull = fullName.toLowerCase();\n//   const lowerFirst = firstName.toLowerCase();\n//   if (lowerFull.includes(lowerFirst)) {\n//     console.log(true);\n//     return true;\n//   } else {\n//     return false;\n//   }\n// }\n\n// checkForName(\"Jason Neis\", \"Jason\");\n// checkForName(\"Jason Neis\", \"jAsOn\");\n// checkForName(\"Jason Neis\", \"Jacob\");\n// checkForName(\"Caty Stars\", \"Caty\");\n// checkForName(\"Caty Stars\", \"cAtY\");\n// checkForName(\"Caty Stars\", \"Andromeda\");\n\n/////////////////////////////////\n\n// function checkFileExtension(fileName, ext) {\n//   if (fileName.endsWith(ext)) {\n//     console.log(\"Yes\");\n//     return \"File extension matches\";\n//   } else {\n//     console.log(\"No\");\n//     return \"File extension does not match\";\n//   }\n// }\n\n// checkFileExtension(\"styles.css\", \".css\");\n// checkFileExtension(\"styles.css\", \".js\");\n// checkFileExtension(\"app.js\", \".js\");\n// checkFileExtension(\"app.js\", \".html\");\n// checkFileExtension(\"index.html\", \".html\");\n// checkFileExtension(\"index.html\", \".css\");\n// checkFileExtension(\"index.html\", \".js\");\n\n////////////////////////////////////////////\n\n// function getFileName(file) {\n//   const fileDot = file.indexOf(\".\");\n//   if (fileDot >= 0) {\n//     file.slice(0, fileDot);\n//     console.log(file.slice(0, fileDot));\n//     return file.slice(0, fileDot);\n//   } else {\n//     console.log(file);\n//     return file;\n//   }\n// }\n\n// getFileName(\"styles.css\");\n// getFileName(\"app.js\");\n// getFileName(\"app\");\n// getFileName(\"index.js\");\n// getFileName(\"index.html\");\n// getFileName(\"index.css\");\n// getFileName(\"index\");\n\n//////////////////////////////////////\n\n// function createFileName(name, ext) {\n//   console.log(`${name.trim()}.${ext}`);\n//   return `${name.trim()}.${ext}`;\n// }\n\n// createFileName(\" order \", \"txt\");\n// createFileName(\"report \", \"csv\");\n// createFileName(\" presentation\", \"xml\");\n\n////////////////////////////////\n\n// let count = 0;\n\n// while (count < 10) {\n//   console.log(`Count: ${count}`);\n//   count += 4;\n// }\n\n// let clientCounter = 18;\n// const maxClients = 25;\n\n// while (clientCounter < maxClients) {\n//   console.log(clientCounter);\n//   clientCounter += 1;\n// }\n\n// function calculateTotal(number) {\n//   let maxNumber = 0;\n//   let summ = 0;\n//   while (maxNumber < number) {\n//     maxNumber += 1;\n//     summ += maxNumber;\n//   }\n//   console.log(summ);\n//   return summ;\n// }\n\n// calculateTotal(1);\n// calculateTotal(3);\n// calculateTotal(0);\n// calculateTotal(18);\n// calculateTotal(24);\n// calculateTotal(20);\n\n///////////////////////////////\n\n// for (let i = 0; i <= 20; i += 5) {\n//   console.log(i);\n// }\n\n// function calculateTotal(number) {\n//   let summ = 0;\n//   for (let maxNumber = 0; maxNumber <= number; maxNumber++) {\n//     summ += maxNumber;\n//   }\n//   console.log(summ);\n//   return summ;\n// }\n\n// calculateTotal(1);\n// calculateTotal(0);\n// calculateTotal(7);\n// calculateTotal(18);\n// calculateTotal(24);\n\n////////////////////////////////////////\n\n// function calculateEvenTotal(number) {\n//   let summ = 0;\n//   for (let maxNumber = 2; maxNumber <= number; maxNumber += 2) {\n//     summ += maxNumber;\n//   }\n//   console.log(summ);\n//   return summ;\n// }\n\n// calculateEvenTotal(1);\n// calculateEvenTotal(3);\n// calculateEvenTotal(7);\n// calculateEvenTotal(18);\n// calculateEvenTotal(27);\n\n//////////////////////////////////\n\n// const start = 6;\n// const end = 25;\n// let number;\n\n// for (number = start; number < end; number++) {\n//   if ((number > start, number < end, number % 5 === 0)) {\n//     console.log(number);\n//     break;\n//   }\n// }\n\n///////////////////////////////////\n\n// function findNumberFromFive(max, target) {\n//   console.log(\"Log in the body of the function before the cycle\");\n\n//   for (let i = 5; i <= max; i += 1) {\n//     console.log(\"Current counter value i:\", i);\n\n//     if (i === target) {\n//       console.log(`Found the number ${target}, interrupt the cycle`);\n//       break;\n//     }\n//   }\n\n//   console.log(\"Log in body function after cycle\");\n// }\n\n// findNumberFromFive(10, 6);\n// console.log(\"Log after exiting function\");\n\n//////////////////////////////////\n\n// function findNumber(start, end, divisor) {\n//   for (let number = start; number < end; number++) {\n//     if ((number > start, number < end, number % divisor === 0)) {\n//       console.log(number);\n//       return number;\n//     }\n//   }\n// }\n\n// findNumber(2, 6, 5);\n// findNumber(8, 17, 3);\n// findNumber(6, 9, 4);\n// findNumber(16, 35, 7);\n\n///////////////////////////////////\n\n// function getOrderQuantity(order) {\n//   console.log(order.length);\n//   return order.length;\n// }\n\n// getOrderQuantity(['apple', 'peach', 'pear', 'banana']);\n// getOrderQuantity(['apple', 'banana']);\n// getOrderQuantity(['apple', 'banana', 'pear']);\n// getOrderQuantity([]);\n\n/////////////////////////////////////\n\n// function getLastElementMeta(array) {\n//   // const lastElementNumber = array.length - 1;\n//   // console.log([array.length - 1, array[array.length - 1]]);\n//   return [array.length - 1, array[array.length - 1]];\n// }\n\n// console.log(getLastElementMeta(['apple', 'peach', 'pear', 'banana']));\n// console.log(getLastElementMeta(['apple', 'peach', 'pear']));\n// console.log(getLastElementMeta(['apple', 'peach']));\n// console.log(getLastElementMeta(['apple']));\n\n////////////////////////////////////////\n\n// function getExtremeElements(array) {\n//   // const lastElementNumber = array.length - 1;\n//   console.log([array[0], array[array.length - 1]]);\n//   return [array[0], array[array.length - 1]];\n// }\n\n// console.log(getExtremeElements([1, 2, 3, 4, 5]));\n// console.log(getExtremeElements(['Earth', 'Mars', 'Venus']));\n// console.log(getExtremeElements(['apple', 'peach', 'pear', 'banana']));\n\n/////////////////////////////////////////\n\n// const a = ['mango', 'poly'];\n// const b = a;\n\n// a[0] = 'jacobs';\n// b[1] = 'turrel';\n\n// console.log(a);\n// console.log(b);\n\n/////////////////////////////////////////////\n\n// function getLength(array) {\n//   const string = array.join('');\n// console.log(array.join('').length);\n//   console.log(string);\n//   return array.join('').length;\n// }\n\n// console.log(getLength(['Mango', 'hurries', 'to', 'the', 'train'])); //22\n// console.log(getLength(['M', 'a', 'n', 'g', 'o'])); //5\n// console.log(getLength(['top', 'picks', 'for', 'you'])); //14\n\n////////////////////////////////\n\n// function calculateEngravingPrice(message, pricePerWord) {\n//   console.log(message.split(' ').length * pricePerWord);\n//   return message.split(' ').length * pricePerWord;\n// }\n\n// console.log(calculateEngravingPrice('JavaScript is in my blood', 10));\n// console.log(calculateEngravingPrice('JavaScript is in my blood', 20));\n// console.log(calculateEngravingPrice('Web-development is creative work', 40));\n// console.log(calculateEngravingPrice('Web-development is creative work', 20));\n\n////////////////////////////////\n\n// const fruits = ['apple', 'plum', 'pear', 'orange', 'banana'];\n\n// const firstTwoEls = fruits.slice(0, 2);\n// const nonExtremeEls = fruits.slice(1, 4);\n// const lastThreeEls = fruits.slice(-3);\n\n// console.log(firstTwoEls);\n// console.log(nonExtremeEls);\n// console.log(lastThreeEls);\n\n//////////////////////////////////////\n\n// const oldClients = ['Mango', 'Ajax', 'Poly', 'Kiwi'];\n// const newClients = ['Peach', 'Houston'];\n\n// const allClients = oldClients.concat(newClients);\n\n// console.log(allClients);\n\n//////////////////////////////////////\n\n// function getSlice(array, value) {\n//   // const arrayNumber = array.indexOf(value);\n//   console.log(array.slice(0, array.indexOf(value) + 1));\n//   return array.slice(0, array.indexOf(value) + 1);\n// }\n\n// getSlice(['Mango', 'Poly', 'Ajax'], 'Poly');\n// getSlice(['Mango', 'Poly', 'Ajax'], 'Ajax');\n// getSlice(['Mango', 'Poly', 'Ajax'], 'Mango');\n// getSlice(['Mango', 'Poly', 'Ajax'], 'Jacob');\n// getSlice(['Mango', 'Poly', 'Ajax'], 'Casey');\n\n//////////////////////////////////////////\n\n// function createArrayOfNumbers(min, max) {\n//   const number = [];\n//   for (let field = min; field <= max; field++) {\n//     number.push(field);\n//   }\n//   console.log(number);\n//   return number;\n// }\n\n// createArrayOfNumbers(1, 3);\n// createArrayOfNumbers(14, 17);\n// createArrayOfNumbers(29, 34);\n\n///////////////////////////////////////\n\n// const planets = ['Earth', 'Mars', 'Venus'];\n\n// for (let i = 0; i < planets.length; i += 1) {\n//   console.log(planets[i]);\n// }\n\n///////////////////////////////////\n\n// function calculateTotalPrice(order) {\n//   let summ = 0;\n//   for (let number = 0; number < order.length; number++) {\n//     summ = summ + order[number];\n//   }\n//   console.log(summ);\n//   return summ;\n// }\n\n// calculateTotalPrice([12, 85, 37, 4]); //138\n// calculateTotalPrice([164, 48, 291]); //503\n// calculateTotalPrice([412, 371, 94, 63, 176]); //1116\n\n/////////////////////////////////////\n\n// function getEvenNumbers(start, end) {\n//   let array = [];\n//   for (let number = start; number <= end; number++) {\n//     if (number % 2 === 0) {\n//       array.push(number);\n//     }\n//   }\n//   console.log(array);\n//   return array;\n// }\n\n// getEvenNumbers(2, 5);\n// getEvenNumbers(3, 11);\n// getEvenNumbers(6, 12);\n// getEvenNumbers(8, 8);\n// getEvenNumbers(7, 7);\n\n///////////////////////////////////\n\n// function checkStorage(storage, item) {\n//   if (storage.includes(item.toLowerCase())) {\n//     console.log(`${item.toLowerCase()} is available to order!`);\n//     return `${item.toLowerCase()} is available to order!`;\n//   } else {\n//     console.log('Sorry! We are out of stock!');\n//     return 'Sorry! We are out of stock!';\n//   }\n// }\n\n// checkStorage(['apple', 'plum', 'pear'], 'plum');\n// checkStorage(['apple', 'plum', 'pear'], 'pLuM');\n// checkStorage(['apple', 'plum', 'pear'], 'pear');\n// checkStorage(['apple', 'plum', 'pear'], 'pEAr');\n// checkStorage(['apple', 'plum', 'pear'], 'orange');\n// checkStorage(['apple', 'plum', 'pear'], 'carrot');\n\n////////////////////////////////////////////////\n\n// function getCommonElements(array1, array2) {\n//   let result1 = [];\n//   let result2 = [];\n//   for (let index = 0; index < array1.length; index++) {\n//     // metod 1\n//     if (array2.includes(array1[index])) {\n//       result1.push(array1[index]);\n//     }\n//     // metod 2\n//     array2.includes(array1[index]) ? result2.push(array1[index]) : 'No';\n//   }\n//   // metod 2\n//   console.log(result2);\n//   // metod 1\n//   return result1;\n// }\n\n// console.log(getCommonElements([1, 2, 3], [2, 4]));\n// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19]));\n// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27]));\n// console.log(getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40]));\n// console.log(getCommonElements([1, 2, 3], [10, 20, 30]));\n\n///////////////////////////////////////////\n\n// const numbers = [-94, 87, 12, 0, -67, 32];\n// const maxValue = Math.max.apply(null, numbers);\n\n// console.log(maxValue);\n\n///////////////////////////////////\n\n// Функція для визначення типу змінної:\n// Написати функцію для визначення типу змінної.\n// Функція отримує будь-яке значення в якості аргументу\n// і визначає тип цієї змінної. Виводить в консоль\n// повідомлення `Тип змінної: type`\n\n// function typeVariable(variable) {\n//   return `Тип змінної ${typeof variable}`;\n// }\n\n// console.log(typeVariable(true));\n// console.log(typeVariable(5));\n// console.log(typeVariable('true'));\n\n/////////////////////////////////////\n\n// Оголоси функцію hasDiscount(age, isStudent, isPensioner),\n// яка перевіряє, чи покупець має право на знижку.\n// І повертає true - якщо має право на знижку і false, якщо - ні.\n// Покупець має право на знижку, якщо він є студентом\n// або пенсіонером, або вік його між 12 і 18 роками(включно).\n// Значення параметрів будуть задаватися під час виклику функції:\n// age - вік покупця;\n// isStudent - буль (вказує чи є покупець студентом);\n// isPensioner - буль  (вказує чи є покупець пенсіонером);\n\n// function hasDiscount(age) {\n//   if (age >= 12 && age <= 18) {\n//     return 'is Skool';\n//   } else if (age >= 60) {\n//     return 'is Pensioner';\n//   } else if (age > 25 && age < 60) {\n//     return 'is Worker';\n//   } else {\n//     return 'is Student';\n//   }\n// }\n\n// console.log(hasDiscount(45));\n// console.log(hasDiscount(75));\n// console.log(hasDiscount(14));\n// console.log(hasDiscount(25));\n\n/////////////////////////////////////\n\n// function calculateTotalPrice(order) {\n//   let summ = 0;\n//   for (const number of order) {\n//     summ = summ + number;\n//   }\n//   return summ;\n// }\n\n// console.log(calculateTotalPrice([12, 85, 37, 4]));\n// console.log(calculateTotalPrice([164, 48, 291]));\n// console.log(calculateTotalPrice([412, 371, 94, 63, 176]));\n// console.log(calculateTotalPrice([]));\n\n///////////////////////////////////////\n\n// function createReversedArray() {\n//   const array1 = Array.from(arguments);\n//   console.log(array1.toReversed());\n//   return array1.toReversed();\n// }\n\n// createReversedArray(12, 85, 37, 4);\n// createReversedArray(164, 48, 291);\n// createReversedArray(412, 371, 94, 63, 176);\n// createReversedArray();\n\n/////////////////////////////////////\n\n// const calculateTax = function (amount, taxRate = 0.2) {\n//   console.log(amount * taxRate);\n//   return amount * taxRate;\n// };\n\n// calculateTax(100, 0.1);\n// calculateTax(200, 0.1);\n// calculateTax(100, 0.2);\n// calculateTax(200, 0.2);\n// calculateTax(100, 0.3);\n// calculateTax(200, 0.3);\n// calculateTax(100);\n// calculateTax(200);\n\n//////////////////////////////////////////\n\n// arguments;\n// const foo = function () {\n//   const args = Array.from(arguments);\n\n//   console.log(arguments);\n\n//   args.push(100);\n\n//   console.log(args);\n\n//   console.log(arguments[0]);\n//   console.log(arguments[1]);\n//   console.log(arguments[arguments.length - 1]);\n// };\n\n// foo(10, 'Hello', true, 20, 'nono');\n\n//////////////////////////////////////////\n\n// Оголоси функцію checkString(value), яка перевіряє\n// чи отримане значення є рядком і не містить символ $.\n// Якщо це так, виведіть кількість символів у рядку.\n// Якщо значення не є рядком, виведіть повідомлення про невірний ввід.\n\n// const checkString = function (value) {\n//   if (typeof value === 'string' && !value.includes('$')) {\n//     return value.length;\n//   } else {\n//     return 'Не вірний ввід';\n//   }\n// };\n\n// console.log(checkString('Vitalii'));\n// console.log(checkString(25));\n// console.log(checkString('Boria$386'));\n\n//////////////////////////////////////////////////////////\n\n// Оголоси функцію isEvenNumber(number), яка перевіряє\n// (за допомогою тернарного оператору) чи отримане значення\n// є парним числом і виводить відповідне повідомлення\n// \"Число парне\" або \"Число непарне\"\n// Якщо функція отримує не число вивести повідомлення\n// \"Невалідне значення\"\n\n// const isEvenNumber = function (value) {\n//   let message =\n//     value % 2 === 0 && typeof value === 'number'\n//       ? 'Число парне'\n//       : value % 2 !== 0 && typeof value === 'number'\n//       ? 'Число непарне'\n//       : 'Невалідне значення';\n//   console.log(message);\n// };\n\n// isEvenNumber(25);\n// isEvenNumber(10);\n// isEvenNumber('24');\n// isEvenNumber('25');\n// isEvenNumber(true);\n\n/////////////////////////////////////\n\n// Оголоси функцію calculateSquare(value).\n// Функція має перевіряти чи є отримане значення - число\n// або за можливості перетворити рядок на число\n// Якщо це число функція возводить число у квадрат і виводить рядок\n// `The square of ${numberValue} is ${squaredNumber}`\n// numberValue - отримане число або перетворене з рядка число.\n// squaredNumber - numberValue у квадраті.\n// Якщо значення не є числом, функція повертає рядок 'Invalid input!'.\n\n// const calculateSquare = function (value) {\n//   const numberValue = parseFloat(value);\n//   if (isNaN(numberValue)) {\n//     console.log('Invalid input!');\n//     console.log(isNaN(numberValue));\n//   } else {\n//     const squaredNumber = numberValue ** 2;\n//     console.log(`The square of ${numberValue} is ${squaredNumber}`);\n//   }\n// };\n\n// calculateSquare(25);\n// calculateSquare('35.35');\n// calculateSquare('vngh');\n\n/////////////////////////////////////////////////\n\n// Напишіть функцію, яка приймає аргумент і визначає його тип даних.\n// Якщо тип - строка, функція повертає \"string\", якщо число - \"number\",\n// в іншому випадку - \"unknown\".\n\n// const argType = function (argument) {\n//   let arg =\n//     typeof argument === 'string'\n//       ? console.log('string')\n//       : typeof argument === 'number'\n//       ? console.log('number')\n//       : console.log('unkown');\n// };\n\n// argType(18);\n// argType('Vent');\n// argType(true);\n// argType('235');\n\n///////////////////////////////////////////////////\n\n// Оголоси функцію canRegisterOnSite(age, hasAcceptedTerms),\n// яка перевіряє, чи може користувач зареєструватись на сайті.\n// І повертає true - якщо може зареєструватись і false, якщо - ні.\n// Користувач може зареєструватись, якщо йому виповнилося 13 років\n// і він прийняв умови використання.\n// Значення параметрів будуть задаватися під час виклику функції:\n// age - вік користувача;\n// hasAcceptedTerms - буль (вказує чи прийняв користувач умови використання);\n\n// const canRegisterOnSite = function (age, hasAcceptedTerms) {\n//   if (age >= 13 && hasAcceptedTerms === true) {\n//     return true;\n//   } else {\n//     return false;\n//   }\n// };\n\n// console.log(canRegisterOnSite(12, true));\n// console.log(canRegisterOnSite(16, false));\n// console.log(canRegisterOnSite(16, true));\n// console.log(canRegisterOnSite(13, true));\n\n/////////////////////////////////////////////////////\n\n// Написати функція для обчислення довжини рядка.\n// Функція отримує рядок в якості аргументу і\n// виводить в консоль повідомлення \"Довжина рядка length\"\n\n// const arrayLength = function (array) {\n//   return `Довжина рядка ${array.length}`;\n// };\n\n// console.log(arrayLength('tornado'));\n// console.log(arrayLength('Lorem5'));\n\n///////////////////////////////////////////////////////\n\n// За допомогою циклу for знайдіть суму усіх парних чисел у проміжку від min до max включно\n\n// const max = 100;\n// const min = 50;\n// let numberSumm = 0;\n\n// for (let number = min; number <= max; number += 2) {\n//   numberSumm += number;\n// }\n// console.log(numberSumm);\n\n////////////////////////////////////////////////////////////////\n\n// Написати функцію getCountryInfo(country), котра буде\n// отримувати назву країни і виводити інформацію про неї\n// China => \"Китай - найбільша країна за населенням у світі.\"\n// Australia => \"Австралія - найбільший острів та країна в Океанії.\"\n// France => \"Франція відома своєю гастрономією та мистецтвом.\"\n// Germany => \"Німеччина - найбільша економіка в Європі.\"\n// Canada => \"Канада - друга за площею країна у світі, відома своєю природою.\"\n// Якщо країни немає, вивести повідомлення \"Інформація про цю країну відсутня.\"\n\n// const getCountryInfo = function (country) {\n//   switch (country) {\n//     case 'Canada':\n//       console.log(\n//         'Канада - друга за площею країна у світі, відома своєю природою.'\n//       );\n//       break;\n//     case 'Germany':\n//       console.log('Німеччина - найбільша економіка в Європі.');\n//       break;\n//     case 'France':\n//       console.log('Франція відома своєю гастрономією та мистецтвом.');\n//       break;\n//     case 'Australia':\n//       console.log('Австралія - найбільший острів та країна в Океанії.');\n//       break;\n//     case 'China':\n//       console.log('Китай - найбільша країна за населенням у світі.');\n//       break;\n//     default:\n//       console.log('Інформація про цю країну відсутня.');\n//   }\n// };\n\n// getCountryInfo('Germany');\n// getCountryInfo('Canada');\n// getCountryInfo('France');\n// getCountryInfo('Australia');\n// getCountryInfo('China');\n// getCountryInfo('Ukraine');\n// getCountryInfo('Austria');\n// getCountryInfo('Itali');\n\n//////////////////////////////////////////////\n\n// const apartment = {\n//   imgUrl: 'https://via.placeholder.com/640x480',\n//   descr: 'Spacious apartment in the city center',\n//   rating: 4,\n//   price: 2153,\n//   tags: ['premium', 'promoted', 'top'],\n//   owner: {\n//     name: 'Henry',\n//     phone: '982-126-1588',\n//     email: 'henry.carter@aptmail.com',\n//   },\n// };\n\n// const ownerName = apartment.owner.name;\n// const ownerPhone = apartment.owner.phone;\n// const ownerEmail = apartment.owner.email;\n// const numberOfTags = apartment.tags.length;\n// const firstTag = apartment.tags[0];\n// const lastTag = apartment.tags[apartment.tags.length - 1];\n\n// console.log(ownerName);\n// console.log(ownerPhone);\n// console.log(ownerEmail);\n// console.log(numberOfTags);\n// console.log(firstTag);\n// console.log(lastTag);\n\n////////////////////////////////////////////////\n\n// const apartment = {\n//   imgUrl: 'https://via.placeholder.com/640x480',\n//   descr: 'Spacious apartment in the city center',\n//   rating: 4,\n//   price: 2153,\n//   tags: ['premium', 'promoted', 'top'],\n//   owner: {\n//     name: 'Henry',\n//     phone: '982-126-1588',\n//     email: 'henry.carter@aptmail.com',\n//   },\n// };\n\n// console.log(apartment.price);\n// console.log(apartment.rating);\n// console.log(apartment.owner.name);\n// console.log(apartment.tags);\n\n// apartment.price = 5000;\n// apartment.rating = 4.7;\n// apartment.owner.name = 'Henry Sibola';\n// apartment.tags.push('trusted');\n\n// console.log(apartment.price);\n// console.log(apartment.rating);\n// console.log(apartment.owner.name);\n// console.log(apartment.tags);\n\n///////////////////////////////////////////////////////\n\n// const apartment = {\n//   imgUrl: 'https://via.placeholder.com/640x480',\n//   descr: 'Spacious apartment in the city center',\n//   rating: 4.7,\n//   price: 5000,\n//   tags: ['premium', 'promoted', 'top', 'trusted'],\n//   owner: {\n//     name: 'Henry Sibola',\n//     phone: '982-126-1588',\n//     email: 'henry.carter@aptmail.com',\n//   },\n// };\n\n// apartment.area = 60;\n// apartment.rooms = 3;\n// apartment.location = {\n//   country: 'Jamaica',\n//   city: 'Kingston',\n// };\n\n// console.log(apartment.location);\n\n/////////////////////////////////////////\n\n// const emailInputName = 'email';\n// const passwordInputName = 'password';\n\n// const credentials = {\n//   [emailInputName]: 'henry.carter@aptmail.com',\n//   [passwordInputName]: 'jqueryismyjam',\n// };\n\n// console.log(credentials.email);\n// console.log(credentials.password);\n\n//////////////////////////////////////////////\n\n// const apartment = {\n//   descr: 'Spacious apartment in the city center',\n//   rating: 4,\n//   price: 2153,\n// };\n\n// const keys = [];\n// const values = [];\n\n// for (const key in apartment) {\n//   if (apartment.hasOwnProperty.call(apartment, key)) {\n//     keys.push(key);\n//     values.push(apartment[key]);\n//   }\n// }\n// console.log(keys);\n// console.log(values);\n\n///////////////////////////////////////////////////////\n\n// const apartment = {\n//   descr: 'Spacious apartment in the city center',\n//   rating: 4,\n//   price: 2153,\n// };\n// const values = [];\n// const keys = [];\n\n// const keysForOf = Object.keys(apartment);\n\n// for (const key of keysForOf) {\n//   keys.push(key);\n//   values.push(apartment[key]);\n// }\n\n//////////////////////////////////////////////////\n\n// function countProps(object) {\n//   let propCount = 0;\n\n//   const keysFor = Object.keys(object);\n\n//   for (const key of keysFor) {\n//     propCount = keysFor.length;\n//   }\n\n//   return propCount;\n// }\n// console.log(countProps({}));\n// console.log(countProps({ name: 'Mango', age: 2 }));\n// console.log(countProps({ mail: 'poly@mail.com', isOnline: true, score: 500 }));\n\n//////////////////////////////////////////////////////\n\n// const apartment = {\n//   descr: 'Spacious apartment in the city center',\n//   rating: 4,\n//   price: 2153,\n// };\n\n// const keys = Object.keys(apartment);\n// const values = Object.values(apartment);\n\n// console.log(keys);\n// console.log(values);\n\n//////////////////////////////////////\n\n// function countTotalSalary(salaries) {\n//   let totalSalary = 0;\n//   const salarNumber = Object.values(salaries);\n//   const salarKey = Object.keys(salaries);\n//   console.log(salarKey);\n\n//   for (const values of salarNumber) {\n//     totalSalary += values;\n//   }\n//   return totalSalary;\n// }\n\n// console.log(countTotalSalary({ mango: 100, poly: 150, alfred: 80 }));\n// console.log(countTotalSalary({}));\n// console.log(countTotalSalary({ kiwi: 200, poly: 50, ajax: 150 }));\n\n////////////////////////////////////////\n\n// const colors = [\n//   { hex: '#f44336', rgb: '244,67,54' },\n//   { hex: '#2196f3', rgb: '33,150,243' },\n//   { hex: '#4caf50', rgb: '76,175,80' },\n//   { hex: '#ffeb3b', rgb: '255,235,59' },\n// ];\n\n// // console.log(colors.hex);\n\n// const hexColors = [];\n// const rgbColors = [];\n\n// for (const color of colors) {\n//   hexColors.push(color.hex);\n//   rgbColors.push(color.rgb);\n//   console.log(colors.keys);\n// }\n\n// console.log(hexColors);\n// console.log(rgbColors);\n\n///////////////////////////////////////////////////////////////////////////////////////\n\n// const books = [\n//   { title: 'The Last Kingdom', author: 'Bernard Cornwell', rating: 5.8 },\n//   { title: 'Beside Still Waters', author: 'Robert Sheckley', rating: 4.5 },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 2.1,\n//   },\n// ];\n\n// const authorToSearchFor = 'Robert Sheckley';\n\n// for (const book of books) {\n//   if (book.author === authorToSearchFor) {\n//     console.log(book);\n//     console.log(book.title);\n//     console.log(book.rating);\n//   }\n// }\n\n////////////////////////////////////////////////////////////////////////////////////////\n\n// function getProductPrice(productName) {\n//   const products = [\n//     { name: 'Radar', price: 1300, quantity: 4 },\n//     { name: 'Scanner', price: 2700, quantity: 3 },\n//     { name: 'Droid', price: 400, quantity: 7 },\n//     { name: 'Grip', price: 1200, quantity: 9 },\n//   ];\n\n//   for (const i of products) {\n//     if (i.name === productName) {\n//       return i.price;\n//     }\n//   }\n// }\n\n// console.log(getProductPrice('Radar'));\n// console.log(getProductPrice('Grip'));\n// console.log(getProductPrice('Scanner'));\n// console.log(getProductPrice('Droid'));\n// console.log(getProductPrice('Engine'));\n\n///////////////////////////////////////////////////////////////////\n\n// function getAllPropValues(propName) {\n//   const result = [];\n\n//   const products = [\n//     { name: 'Radar', price: 1300, quantity: 4 },\n//     { name: 'Scanner', price: 2700, quantity: 3 },\n//     { name: 'Droid', price: 400, quantity: 7 },\n//     { name: 'Grip', price: 1200, quantity: 9 },\n//   ];\n//   for (const key of products) {\n//     if (key[propName]) {\n//       result.push(key[propName]);\n//     }\n//   }\n//   console.log(result);\n// }\n\n// console.log(getAllPropValues('name'));\n// console.log(getAllPropValues('quantity'));\n// console.log(getAllPropValues('price'));\n// console.log(getAllPropValues('category'));\n\n////////////////////////////////////////////\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n// ];\n\n// for (const book of books) {\n//   console.log(book); // Об'єкт книги\n//   console.log(book.title); // Назва\n//   console.log(book.author); // Автор\n//   console.log(book.rating); // Рейтинг\n// }\n\n////////////////////////////////////////////////////////\n\n// function calculateTotalPrice(productName) {\n//   let summ;\n//   const products = [\n//     { name: 'Radar', price: 1300, quantity: 4 },\n//     { name: 'Scanner', price: 2700, quantity: 3 },\n//     { name: 'Droid', price: 400, quantity: 7 },\n//     { name: 'Grip', price: 1200, quantity: 9 },\n//   ];\n\n//   for (const key of products) {\n//     if (key.name === productName) {\n//       return key.price * key.quantity;\n//     }\n//   }\n//   return `Product ${productName} not found!`;\n// }\n\n// console.log(calculateTotalPrice('Blaster'));\n// console.log(calculateTotalPrice('Radar'));\n// console.log(calculateTotalPrice('Droid'));\n// console.log(calculateTotalPrice('Grip'));\n// console.log(calculateTotalPrice('Scanner'));\n\n////////////////////////////////////////////////////////////\n\n// const atTheOldToad = {\n//   potions: [],\n//   getPotions() {\n//     return 'List of all available potions';\n//   },\n//   addPotion(potionName) {\n//     return `Adding ${potionName}`;\n//   },\n// };\n\n// console.log(atTheOldToad.getPotions());\n// console.log(atTheOldToad.addPotion('Invisibility'));\n// console.log(atTheOldToad.addPotion('Power potion'));\n\n//////////////////////////////////////////////////////////////\n\n// const atTheOldToad = {\n//   potions: ['Speed potion', 'Stone skin'],\n//   getPotions() {\n//     return this.potions;\n//   },\n//   addPotion(potionName) {\n//     this.potions.push(potionName);\n//     console.log(this.potions);\n//   },\n// };\n\n// console.log(atTheOldToad.getPotions());\n// atTheOldToad.addPotion('Invisibility');\n// atTheOldToad.addPotion('Power potion');\n\n////////////////////////////////////////////////////////////////\n\n// const atTheOldToad = {\n//   potions: [\n//     { name: 'Speed potion', price: 460 },\n//     { name: 'Stone skin', price: 520 },\n//   ],\n//   getPotions() {\n//     return this.potions;\n//   },\n//   addPotion(newPotion) {\n//     this.potions.push(newPotion);\n//   },\n//   getTotalPrice() {\n//     let summPotions = 0;\n//     for (const summ of this.potions) {\n//       summPotions += summ.price;\n//     }\n//     return summPotions;\n//   },\n// };\n\n// atTheOldToad.addPotion({ name: 'Invisibility', price: 620 });\n// atTheOldToad.addPotion({ name: 'Power potion', price: 270 });\n\n// console.log(atTheOldToad.getTotalPrice());\n\n////////////////////////////////////////////////////////\n\n// const atTheOldToad = {\n//   potions: [\n//     { name: 'Speed potion', price: 460 },\n//     { name: 'Stone skin', price: 520 },\n//   ],\n//   getPotions() {\n//     return this.potions;\n//   },\n//   updatePotionName(oldName, newName) {\n//     for (const phial of this.potions) {\n//       if (phial.name === oldName) {\n//         phial.name = newName;\n//       }\n//     }\n//   },\n// };\n\n// console.log(atTheOldToad.updatePotionName('Stone skin', 'Invisibility'));\n// console.log(atTheOldToad.updatePotionName('Speed potion', 'Polymorth'));\n\n/////////////////////////////////////////////////////\n\n// Напишіть функцію, яка створює масив з вказаною довжиною і заповнює його вказанним значення.\n// Наприклад функція fillArray(3, 'a') повертає масив ['a', 'a', 'a'].\n\n// function fillArray(numIndex, value) {\n//   const result = [];\n//   for (let index = 0; index < numIndex; index++) {\n//     result.push(value);\n//   }\n//   return result;\n// }\n\n// console.log(fillArray(3, 'a'));\n\n///////////////////////////////////////////////////////////////\n\n// Написати функцію clearArray(array), котра створить новий масив\n// в якому не буде значень, які приводяться до false\n\n// const array = [\n//   1,\n//   0,\n//   54,\n//   'doc',\n//   null,\n//   'jpg',\n//   undefined,\n//   '',\n//   'png',\n//   'exe',\n//   false,\n//   'mp4',\n//   NaN,\n//   'hbs',\n// ];\n\n// function clearArray(params) {\n//   const arrNew = [];\n//   for (const iter of array) {\n//     if (iter) {\n//       arrNew.push(iter);\n//     }\n//   }\n//   return arrNew;\n// }\n// console.log(clearArray(array));\n\n////////////////////////////////////////////////\n\n// Напиши скрипт, який порівняє два масива і виведе у консоль результат:\n// true - якщо всі елементи однакові і false - в іншому випадку\n\n// const arr1 = [1, 4, 6, 'color', 324, 232, 'list', 11, 9, 'dream', 34, 0, -30];\n// const arr2 = [6, 'dream', -30, 11, 9, 1, 324, 34, 'color', 4, 232, 0, 'list'];\n// const arr3 = [4, 232, 6, -30, 'color', 324, 'list', 1, 11, 9, 'dream', 34, 0];\n// const arr4 = ['color', 6, -30, 11, 9, 1, 'dream', 324, 34, 4, 232, 0, 'list'];\n// const arr5 = [1, 4, 6, 'color', 'list', 11, 9, 'dream', 34, 0, -30, 'lesson'];\n// const arr6 = [6, 324, 'dream', -30, 9, 8, 34, 'color', 4, 232, 0, 'list', 11];\n// const arr7 = [1, 4, 6, 'color', 324, 232, 'list', 11, 9, 'dream', 34, 0, -30];\n// const arr8 = [6, 'dream', -30, 10, 9, 1, 324, 34, 'color', 4, 232, 0, 'list'];\n\n// function arrays(arr, aarr) {\n//   if (arr.length !== aarr) {\n\n//     if(!aarr.includes)\n//   }\n\n// }\n\n////////////////////////////////////////////////////////////////////////////////////\n\n// Напишіть функцію calculateAverage()\n// яка приймає довільну кількість\n// аргументів і повертає їхнє середнє значення.\n// Додати перевірку, що аргументи це числа.\n\n// function calculateAverage(...args) { }\n\n//////////////////////////////////////////////////\n\n// function add(...args) {\n//   let summ = 0;\n//   for (let i = 0; i < args.length; i++) {\n//     summ += args[i];\n//   }\n//   return summ;\n// }\n\n// console.log(add(15, 27));\n// console.log(add(12, 4, 11, 48));\n// console.log(add(32, 6, 13, 19, 8));\n\n//////////////////////////////////////////////////////\n\n// function addOverNum(value, ...args) {\n//   let summ = 0;\n//   for (let i = 0; i < args.length; i++) {\n//     if (args[i] > value) {\n//       summ += args[i];\n//     }\n//   }\n//   return summ;\n// }\n\n// console.log(addOverNum(50, 15, 27));\n// console.log(addOverNum(10, 12, 4, 11, 48, 10, 8));\n// console.log(addOverNum(15, 32, 6, 13, 19, 8));\n// console.log(addOverNum(20, 74, 11, 62, 46, 12, 36));\n\n/////////////////////////////////////////////////////////////\n\n// function getExtremeScores(scores) {\n//   const result = {\n//     best: Math.max(...scores),\n//     worst: Math.min(...scores),\n//   };\n//   return result;\n// }\n\n// console.log(getExtremeScores([89, 64, 42, 17, 93, 51, 26]));\n// console.log(getExtremeScores([19, 7, 4, 17, 81, 24]));\n\n//////////////////////////////////////////////////////////////////////\n\n// const firstGroupScores = [64, 42, 93];\n// const secondGroupScores = [89, 14, 51, 26];\n// const thirdGroupScores = [29, 47, 18, 97, 81];\n\n// const allScores = [\n//   ...firstGroupScores,\n//   ...secondGroupScores,\n//   ...thirdGroupScores,\n// ];\n// const bestScore = Math.max(...allScores);\n// const worstScore = Math.min(...allScores);\n\n// console.log(bestScore, worstScore);\n\n////////////////////////////////////////////////////////////////\n\n// Розрахувати загальну суму всіх замовлень та вивести інформацію у форматі:\n// `Загальна сума всіх замовлень: totalAmount`\n\n// const orders = [\n//   { id: 1, product: 'Футболка', quantity: 2, price: 15 },\n//   { id: 2, product: 'Шорти', quantity: 3, price: 20 },\n//   { id: 3, product: 'Кросівки', quantity: 1, price: 50 },\n// ];\n\n// let totalAmount = 0;\n\n// for (const iterator of orders) {\n//   totalAmount += iterator.quantity * iterator.price;\n// }\n\n// console.log(`Загальна сума всіх замовлень: ${totalAmount}`);\n\n//////////////////////////////////////////////////////////////\n\n// Є об'єкт, у якому зберігаються обрані товари у кошику.\n// Напишіть код для визначення загальної суму замовлення\n// і збережіть його результат у змінній totalCost.\n// Якщо об'єкт cart порожній, то результат має бути 0.\n\n// const cart = {\n//   apple: 50,\n//   banana: 30,\n//   orange: 40,\n// };\n\n// function totalPrice(cart) {\n//   let totalCost = 0;\n//   for (const key in cart) {\n//     totalCost += cart[key];\n//   }\n\n//   console.log(totalCost);\n// }\n\n// totalPrice(cart);\n\n//////////////////////////////////////////////////\n\n// Напишіть функцію, яка створює масив з вказаною довжиною і заповнює його вказанним значення.\n// Наприклад функція fillArray(3, 'a') повертає масив ['a', 'a', 'a'].\n\n// function fillArray(numIndex, value) {\n//   const result = [];\n//   for (let index = 0; index < numIndex; index++) {\n//     result.push(value);\n//   }\n//   return result;\n// }\n\n// console.log(fillArray(5, 'ca'));\n\n///////////////////////////////////////////////////////////////\n\n// Написати функцію clearArray(array), котра створить новий масив\n// в якому не буде значень, які приводяться до false\n\n// const array = [\n//   1,\n//   0,\n//   54,\n//   'doc',\n//   null,\n//   'jpg',\n//   undefined,\n//   '',\n//   'png',\n//   'exe',\n//   false,\n//   'mp4',\n//   NaN,\n//   'hbs',\n// ];\n\n// function clearArray(params) {\n//   const arrNew = [];\n//   for (const iter of array) {\n//     if (iter) {\n//       arrNew.push(iter);\n//     }\n//   }\n//   return arrNew;\n// }\n// console.log(clearArray(array));\n\n////////////////////////////////////////////////\n\n// Напиши скрипт, який порівняє два масива і виведе у консоль результат:\n// true - якщо всі елементи однакові і false - в іншому випадку\n\n// const arr1 = [1, 4, 6, 'color', 324, 232, 'list', 11, 9, 'dream', 34, 0, -30];\n// const arr2 = [6, 'dream', -30, 11, 9, 1, 324, 34, 'color', 4, 232, 0, 'list'];\n// const arr3 = [4, 232, 6, -30, 'color', 324, 'list', 1, 11, 9, 'dream', 34, 0];\n// const arr4 = ['color', 6, -30, 11, 9, 1, 'dream', 324, 34, 4, 232, 0, 'list'];\n// const arr5 = [1, 4, 6, 'color', 'list', 11, 9, 'dream', 34, 0, -30, 'lesson'];\n// const arr6 = [6, 324, 'dream', -30, 9, 8, 34, 'color', 4, 232, 0, 'list', 11];\n// const arr7 = [1, 4, 6, 'color', 324, 232, 'list', 11, 9, 'dream', 34, 0, -30];\n// const arr8 = [6, 'dream', -30, 10, 9, 1, 324, 34, 'color', 4, 232, 0, 'list'];\n\n// function arrays(arr, aarr) {\n//   if (arr.length !== aarr.length) {\n//     return false;\n//   }\n//   for (const i of aarr) {\n//     if (!aarr.includes(i)) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\n\n// console.log(arrays(arr5, arr2));\n// console.log(arrays(arr5, arr3));\n// console.log(arrays(arr5, arr4));\n// console.log(arrays(arr1, arr5));\n// console.log(arrays(arr5, arr6));\n// console.log(arrays(arr5, arr7));\n// console.log(arrays(arr5, arr8));\n\n////////////////////////////////////////////////\n\n// Напишіть функцію calculateAverage()\n// яка приймає довільну кількість\n// аргументів і повертає їхнє середнє значення.\n// Додати перевірку, що аргументи це числа.\n\n// function calculateAverage(...args) {\n//   let count = 0;\n//   let result = 0;\n//   for (const iter of args) {\n//     if (typeof iter === 'number') {\n//       result += iter;\n//       count += 1;\n//     }\n//   }\n//   return result / count;\n// }\n\n// console.log(calculateAverage(25, 'jkb', 5, 28));\n\n///////////////////////////////////////////////////////////////\n\n// function deliverPizza(pizzaName) {\n//   return `Delivering ${pizzaName} pizza.`;\n// }\n\n// function makePizza(pizzaName) {\n//   return `Pizza ${pizzaName} is being prepared, please wait...`;\n// }\n\n// function makeMessage(pizzaName, callback) {\n//   return callback(pizzaName);\n// }\n\n// console.log(makeMessage('Royal Grand', makePizza));\n// console.log(makeMessage('Ultracheese', deliverPizza));\n\n//////////////////////////////////////////////////////////////////////\n\n// const makePizza = (pizzaName, callback) => {\n//   console.log(`Pizza ${pizzaName} is being prepared, please wait...`);\n//   callback(pizzaName);\n// };\n\n// makePizza('Royal Grand', pizzaName => {\n//   console.log(`Delivering pizza ${pizzaName}`);\n// });\n\n// makePizza('Ultracheese', pizzaName => {\n//   console.log(`Eating pizza ${pizzaName}`);\n// });\n\n// //////////////////////////////////////////////////////////////////\n\n// const makePizza = (pizzaName, callback) => {\n//   console.log(`Pizza ${pizzaName} is being prepared, please wait...`);\n//   callback(pizzaName);\n// };\n\n// makePizza('Royal Grand', pizzaName => {\n//   console.log(`Delivering pizza ${pizzaName}`);\n// });\n\n// makePizza('Ultracheese', pizzaName => {\n//   console.log(`Eating pizza ${pizzaName}`);\n// });\n\n//////////////////////////////////////////////////////////////////\n\n// const numbers = [5, 10, 15, 20, 25];\n\n// Класичний for\n// for (let i = 0; i < numbers.length; i += 1) {\n//   console.log(`Index ${i}, value ${numbers[i]}`);\n// }\n\n// Перебираючий метод forEach\n// numbers.forEach(function (number, index) {\n//   console.log(`Index ${index}, value ${number}`);\n// });\n\n/////////////////////////////////////////////////////////////////////\n\n// function calculateTotalPrice(orderedItems) {\n//   let totalPrice = 0;\n\n//   orderedItems.forEach(function (order) {\n//     totalPrice += order;\n//   });\n\n//   return totalPrice;\n// }\n\n// console.log(calculateTotalPrice([12, 85, 37, 4]));\n// console.log(calculateTotalPrice([164, 48, 291]));\n// console.log(calculateTotalPrice([412, 371, 94, 63, 176]));\n\n/////////////////////////////////////////////////////////////////////\n\n// function filterArray(numbers, value) {\n//   const result = [];\n//   numbers.forEach(function (element) {\n//     if (element > value) {\n//       result.push(element);\n//     }\n//   });\n//   return result;\n// }\n\n// console.log(filterArray([1, 2, 3, 4, 5], 3));\n// console.log(filterArray([1, 2, 3, 4, 5], 4));\n// console.log(filterArray([1, 2, 3, 4, 5], 5));\n// console.log(filterArray([12, 24, 8, 41, 76], 38));\n// console.log(filterArray([12, 24, 8, 41, 76], 20));\n\n/////////////////////////////////////////////////////////////////////\n\n// const filterArray = (numbers, value) => {\n//   const result = [];\n//   numbers.forEach(element => {\n//     if (element > value) {\n//       result.push(element);\n//     }\n//   });\n//   return result;\n// };\n\n// console.log(filterArray([1, 2, 3, 4, 5], 3));\n// console.log(filterArray([1, 2, 3, 4, 5], 4));\n// console.log(filterArray([1, 2, 3, 4, 5], 5));\n// console.log(filterArray([12, 24, 8, 41, 76], 38));\n// console.log(filterArray([12, 24, 8, 41, 76], 20));\n\n/////////////////////////////////////////////////////////////////////\n\n// const changeEven = (numbers, value) => {\n//   let newNumbers = [];\n//   for (let i = 0; i < numbers.length; i++) {\n//     if (numbers[i] % 2 === 0) {\n//       newNumbers.push(numbers[i] + value);\n//     } else if (numbers[i] % 2 !== 0) {\n//       newNumbers.push(numbers[i]);\n//     }\n//   }\n//   return newNumbers;\n// };\n\n// console.log(changeEven([1, 2, 3, 4, 5], 10));\n// console.log(changeEven([2, 8, 3, 7, 4, 6], 10));\n// console.log(changeEven([17, 24, 68, 31, 42], 100));\n\n/////////////////////////////////////////////////////////////////////\n\n// const planets = ['Earth', 'Mars', 'Venus', 'Jupiter'];\n\n// const planetsLengths = planets.map(planet => planet.length);\n// console.log(planetsLengths);\n\n/////////////////////////////////////////////////////////////////////\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },\n//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },\n// ];\n\n// const titles = books.map(book => book.title);\n// console.log(titles);\n\n/////////////////////////////////////////////////////////////////////\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     genres: ['adventure', 'history'],\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     genres: ['fiction'],\n//   },\n//   {\n//     title: 'Redder Than Blood',\n//     author: 'Tanith Lee',\n//     genres: ['horror', 'mysticism'],\n//   },\n// ];\n\n// const genres = books.flatMap(book => book.genres);\n// console.log(genres);\n\n///////////////////////////////////////////////////////////////////////////\n// const us = [\n//   {\n//     name: 'Moore Hensley',\n//     email: 'moorehensley@indexia.com',\n//     eyeColor: 'blue',\n//     friends: ['Sharron Pace'],\n//     isActive: false,\n//     balance: 2811,\n//     gender: 'male',\n//   },\n//   {\n//     name: 'Sharlene Bush',\n//     email: 'sharlenebush@tubesys.com',\n//     eyeColor: 'blue',\n//     friends: ['Briana Decker', 'Sharron Pace'],\n//     isActive: true,\n//     balance: 3821,\n//     gender: 'female',\n//   },\n//   {\n//     name: 'Ross Vazquez',\n//     email: 'rossvazquez@xinware.com',\n//     eyeColor: 'green',\n//     friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],\n//     isActive: false,\n//     balance: 3793,\n//     gender: 'male',\n//   },\n//   {\n//     name: 'Elma Head',\n//     email: 'elmahead@omatom.com',\n//     eyeColor: 'green',\n//     friends: ['Goldie Gentry', 'Aisha Tran'],\n//     isActive: true,\n//     balance: 2278,\n//     gender: 'female',\n//   },\n//   {\n//     name: 'Carey Barr',\n//     email: 'careybarr@nurali.com',\n//     eyeColor: 'blue',\n//     friends: ['Jordan Sampson', 'Eddie Strong'],\n//     isActive: true,\n//     balance: 3951,\n//     gender: 'male',\n//   },\n//   {\n//     name: 'Blackburn Dotson',\n//     email: 'blackburndotson@furnigeer.com',\n//     eyeColor: 'brown',\n//     friends: ['Jacklyn Lucas', 'Linda Chapman'],\n//     isActive: false,\n//     balance: 1498,\n//     gender: 'male',\n//   },\n//   {\n//     name: 'Sheree Anthony',\n//     email: 'shereeanthony@kog.com',\n//     eyeColor: 'brown',\n//     friends: ['Goldie Gentry', 'Briana Decker'],\n//     isActive: true,\n//     balance: 2764,\n//     gender: 'female',\n//   },\n// ];\n////////////////////////////////////////////////////////////////////////////\n\n// const getUserEmails = users => {\n//   return users.map(user => user.email);\n// };\n\n// console.log(\n//   getUserEmails(us)\n// );\n\n//////////////////////////////////////////////////////////////////////\n\n// const numbers = [17, 24, 82, 61, 36, 18, 47, 52, 73];\n\n// const evenNumbers = numbers.filter(filt => filt % 2 === 0);\n// const oddNumbers = numbers.filter(filt => filt % 2 !== 0);\n\n// console.log(evenNumbers, oddNumbers);\n\n////////////////////////////////////////////////////////////////////\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },\n//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },\n// ];\n\n// const MIN_RATING = 8;\n// const AUTHOR = 'Bernard Cornwell';\n\n// const topRatedBooks = books.filter(book => book.rating >= MIN_RATING);\n// const booksByAuthor = books.filter(book => book.author === AUTHOR);\n\n// console.log(topRatedBooks, booksByAuthor);\n\n//////////////////////////////////////////////////////////////////////////////////\n\n// const getUsersWithEyeColor = (users, color) => {\n//   return users.filter(user => user.eyeColor === color);\n// };\n\n// console.log(getUsersWithEyeColor(us, 'blue'));\n// console.log(getUsersWithEyeColor(us, 'green'));\n// console.log(getUsersWithEyeColor(us, 'brown'));\n\n////////////////////////////////////////////////////////////////////////////////////////////\n\n// const getUsersWithAge = (users, minAge, maxAge) => {\n//   return users.filter(user => user.age >= minAge && user.age <= maxAge);\n// };\n\n// console.log(getUsersWithAge(us, 20, 30));\n// console.log(getUsersWithAge(us, 30, 40));\n// console.log(getUsersWithAge(us, 80, 100));\n\n/////////////////////////////////////////////////////////////////////\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },\n// ];\n// const BOOK_TITLE = 'The Dream of a Ridiculous Man';\n// const AUTHOR = 'Robert Sheckley';\n\n// const bookWithTitle = books.find(book => book.title === BOOK_TITLE);\n// const bookByAuthor = books.find(book => book.author === AUTHOR);\n\n// console.log(bookWithTitle);\n// console.log(bookByAuthor);\n\n////////////////////////////////////////////////////////////////////\n\n// const getUserWithEmail = (users, email) => {\n//   return users.find(user => user.email === email);\n// };\n\n// console.log(getUserWithEmail(us, 'shereeanthony@kog.com'));\n// console.log(getUserWithEmail(us, 'elmahead@omatom.com'));\n// console.log(getUserWithEmail(us, 'blackburndotson@furnigeer.com'));\n\n////////////////////////////////////////////////////////////////////////////////\n\n// const isEveryUserActive = users => {\n//   return users.every(user => user.isActive);\n// };\n\n// console.log(isEveryUserActive(us));\n\n//////////////////////////////////////////////////////////////\n\n// const isAnyUserActive = users => {\n//   return users.some(user => user.isActive);\n// };\n\n// console.log(isAnyUserActive(us));\n\n///////////////////////////////////////////////////////////////////\n\n// const players = {\n//   mango: 1270,\n//   poly: 468,\n//   ajax: 710,\n//   kiwi: 244,\n// };\n// const playtimes = Object.values(players); // [1270, 468, 710, 244]\n\n// const totalPlayTime = playtimes.reduce((timePlayer, plays) => {\n//   return timePlayer + plays;\n// });\n\n// const averagePlayTime = totalPlayTime / playtimes.length;\n\n// console.log(totalPlayTime, averagePlayTime);\n\n/////////////////////////////////////////////////////////////////////////\n\n// const players = [\n//   { name: 'Mango', playtime: 1270, gamesPlayed: 4 },\n//   { name: 'Poly', playtime: 469, gamesPlayed: 2 },\n//   { name: 'Ajax', playtime: 690, gamesPlayed: 3 },\n//   { name: 'Kiwi', playtime: 241, gamesPlayed: 1 },\n// ];\n\n// let acc = 0;\n\n// const totalAveragePlaytimePerGame = players.reduce((data, time) => {\n//   data = time.playtime / time.gamesPlayed;\n//   acc += data;\n// }, 0);\n\n// console.log(acc);\n\n////////////////////////////////////////////////////////////////////////////////\n\n// const calculateTotalBalance = users => {\n//   let summ = 0;\n//   users.reduce((manySumm, many) => {\n//     summ += many.balance;\n//   }, 0);\n//   console.log(summ);\n// };\n\n// console.log(calculateTotalBalance(us));\n\n//////////////////////////////////////////////////////////\n\n// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];\n// const authors = [\n//   'Tanith Lee',\n//   'Bernard Cornwell',\n//   'Robert Sheckley',\n//   'Fyodor Dostoevsky',\n// ];\n\n// const ascendingReleaseDates = releaseDates.toSorted();\n\n// const alphabeticalAuthors = authors.toSorted();\n\n// console.log(ascendingReleaseDates, alphabeticalAuthors);\n\n////////////////////////////////////////////////////////////////////////\n\n// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];\n\n// const ascendingReleaseDates = releaseDates.toSorted((a, b) => a - b);\n\n// const descendingReleaseDates = releaseDates.toSorted((a, b) => b - a);\n\n// console.log(ascendingReleaseDates, descendingReleaseDates);\n\n////////////////////////////////////////////////////////////////////////////\n\n// const authors = [\n//   'Tanith Lee',\n//   'Bernard Cornwell',\n//   'Robert Sheckley',\n//   'Fyodor Dostoevsky',\n//   'Howard Lovecraft',\n// ];\n\n// const authorsInAlphabetOrder = authors.toSorted((a, b) => a.localeCompare(b));\n\n// const authorsInReversedOrder = authors.toSorted((a, b) => b.localeCompare(a));\n\n// console.log(authorsInAlphabetOrder, authorsInReversedOrder);\n\n////////////////////////////////////////////////////////////////////////////////////\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n//   {\n//     title: 'Redder Than Blood',\n//     author: 'Tanith Lee',\n//     rating: 7.94,\n//   },\n//   {\n//     title: 'Enemy of God',\n//     author: 'Bernard Cornwell',\n//     rating: 8.67,\n//   },\n// ];\n\n// const sortedByAuthorName = books.toSorted((a, b) =>\n//   a.author.localeCompare(b.author)\n// );\n\n// const sortedByReversedAuthorName = books.toSorted((a, b) =>\n//   b.author.localeCompare(a.author)\n// );\n\n// const sortedByAscendingRating = books.toSorted((a, b) => a.rating - b.rating);\n\n// const sortedByDescentingRating = books.toSorted((a, b) => b.rating - a.rating);\n\n// console.log(\n//   sortedByAuthorName,\n//   sortedByReversedAuthorName,\n//   sortedByAscendingRating,\n//   sortedByDescentingRating\n// );\n\n//////////////////////////////////////////////////////////////////////////////////\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },\n//   {\n//     title: 'The Dreams in the Witch House',\n//     author: 'Howard Lovecraft',\n//     rating: 8.67,\n//   },\n// ];\n// const MIN_BOOK_RATING = 8;\n\n// const names = books\n//   .filter(book => book.rating > MIN_BOOK_RATING)\n//   .map(book => book.author)\n//   .toSorted((a, b) => a.localeCompare(b));\n// console.log(names);\n\n///////////////////////////////////////////////////////////////////////////\n\n// const pizzaPalace = {\n//   pizzas: ['Supercheese', 'Smoked', 'Four meats'],\n//   checkPizza(pizzaName) {\n//     // console.log(checkPizza);\n//     return this.pizzas.includes(pizzaName);\n//   },\n//   order(pizzaName) {\n//     const isPizzaAvailable = this.checkPizza(pizzaName);\n\n//     if (!isPizzaAvailable) {\n//       return `Sorry, there is no pizza named «${pizzaName}»`;\n//     }\n\n//     return `Order accepted, preparing «${pizzaName}» pizza`;\n//   },\n// };\n\n// console.log(pizzaPalace.order('Smoked'));\n// console.log(pizzaPalace.order('Four meats'));\n// console.log(pizzaPalace.order('Big Mike'));\n// console.log(pizzaPalace.order('Viennese'));\n\n/////////////////////////////////////////////////////////////////////\n\n// const parent = {\n//   name: 'Stacey',\n//   surname: 'Moore',\n//   age: 54,\n//   heritage: 'Irish',\n// };\n\n// const child = Object.create(parent);\n// child.name = 'Jason';\n// child.age = 27;\n\n// console.log(child);\n\n/////////////////////////////////////////////////////////////////\n\n// const ancestor = {\n//   name: 'Paul',\n//   age: 83,\n//   surname: 'Dawson',\n//   heritage: 'Irish',\n// };\n\n// const parent = Object.create(ancestor);\n// parent.name = 'Stacey';\n// parent.surname = 'Moore';\n// parent.age = 54;\n\n// const child = Object.create(parent);\n// child.name = 'Jason';\n// child.age = 27;\n\n// console.log(child);\n\n/////////////////////////////////////////////////////////////\n\n// class User {\n//   // Тіло класу\n// }\n\n// const mango = new User();\n// console.log(mango); // {}\n\n// const poly = new User();\n// console.log(poly); // {}\n\n/////////////////////////////////////////////////////////\n\n// class Car {\n//   constructor(brand, model, price) {\n//     this.brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n// }\n// console.log(new Car('Audi', 'Q3', 36000));\n\n//////////////////////////////////////////////////////////\n\n// class Car {\n//   constructor(prices) {\n//     this.brand = prices.brand;\n//     this.model = prices.model;\n//     this.price = prices.price;\n//   }\n// }\n\n// const offer = new Car({ brand: 'Audi', model: 'Q3', price: 36000 });\n// const offer = new Car({ brand: 'BMW', model: 'X5', price: 58900 });\n// const offer = new Car({ brand: 'Nissan', model: 'Murano', price: 31700 });\n\n// console.log(offer);\n\n///////////////////////////////////////////////////////////////////////////////\n\n// class Car {\n//   constructor(params) {\n//     this.brand = params.brand;\n//     this.model = params.model;\n//     this.price = params.price;\n//   }\n\n//   getPrice() {\n//     return this.price;\n//   }\n\n//   changePrice(newPrice) {\n//     this.price = newPrice;\n//   }\n// }\n\n// const offer = new Car({ brand: 'Audi', model: 'Q3', price: 36000 });\n\n// console.log(offer.getPrice());\n// offer.changePrice(22222);\n// console.log(offer.getPrice());\n\n/////////////////////////////////////////////////////////////////////////\n\n// class User {\n//   constructor(params) {\n//     this.name = params.name;\n//     this.email = params.email;\n//   }\n\n//   getEmail() {\n//     return this.email;\n//   }\n\n//   changeEmail(newEmail) {\n//     this.email = newEmail;\n//   }\n// }\n\n// const mango = new User({\n//   name: 'Mango',\n//   email: 'mango@mail.com',\n// });\n\n// console.log(mango.getEmail()); // “mango@mail.com”\n\n///////////////////////////////////////////////////////////////////////\n\n// class Car {\n//   #brand;\n//   model;\n//   price;\n\n//   constructor(params) {\n//     this.#brand = params.brand;\n//     this.model = params.model;\n//     this.price = params.price;\n//   }\n\n//   getPrice() {\n//     return this.price;\n//   }\n\n//   changePrice(newPrice) {\n//     this.price = newPrice;\n//   }\n\n//   getBrand() {\n//     return this.#brand;\n//   }\n\n//   changeBrand(newBrand) {\n//     this.#brand = newBrand;\n//   }\n// }\n\n///////////////////////////////////////////////////////\n\n// class Car {\n//   #brand;\n//   #model;\n//   #price;\n\n//   constructor(params) {\n//     this.#brand = params.brand;\n//     this.#model = params.model;\n//     this.#price = params.price;\n//   }\n\n//   get brand() {\n//     return this.#brand;\n//   }\n\n//   set brand(newBrand) {\n//     this.#brand = newBrand;\n//   }\n\n//   get model() {\n//     return this.#model;\n//   }\n\n//   set model(newModel) {\n//     this.#model = newModel;\n//   }\n\n//   get price() {\n//     return this.#price;\n//   }\n\n//   set price(newPrice) {\n//     this.#price = newPrice;\n//   }\n// }\n\n////////////////////////////////////////////////////////////\n\n// class Car {\n//   static maxPrice = 50000;\n\n//   #price;\n\n//   constructor(params) {\n//     this.#price = params.price;\n//   }\n\n//   get price() {\n//     return this.#price;\n//   }\n\n//   set price(newPrice) {\n//     if (newPrice <= Car.maxPrice) {\n//       this.#price = newPrice;\n//     }\n//   }\n// }\n\n// const audi = new Car({ price: 35000 });\n// console.log(audi.price); // 35000\n\n// audi.price = 49000;\n// console.log(audi.price); // 49000\n\n// audi.price = 51000;\n// console.log(audi.price); // 49000\n\n/////////////////////////////////////////////////////////////////\n\n// class Car {\n//   static #maxPrice = 50000;\n\n//   static checkPrice(price) {\n//     if (Car.#maxPrice >= price) {\n//       return 'Success! Price is within acceptable limits';\n//     }\n//     return 'Error! Price exceeds the maximum';\n//   }\n\n//   constructor(params) {\n//     this.price = params.price;\n//   }\n// }\n\n// const audi = new Car({ price: 36000 });\n// const bmw = new Car({ price: 64000 });\n\n// console.log(Car.checkPrice(audi.price)); // \"Success! Price is within acceptable limits\"\n// console.log(Car.checkPrice(bmw.price)); // \"Error! Price exceeds the maximum\"\n\n/////////////////////////////////////////////////////////////////////////\n\n// class User {\n//   constructor(email) {\n//     this.email = email;\n//   }\n\n//   get email() {\n//     return this.email;\n//   }\n\n//   set email(newEmail) {\n//     this.email = newEmail;\n//   }\n// }\n\n// class Admin extends User {\n//   static role = {\n//     BASIC: 'basic',\n//     SUPERUSER: 'superuser',\n//   };\n// }\n\n// Admin.role.BASIC;\n\n//////////////////////////////////////////////////////////////////\n\n// class User {\n//   email;\n\n//   constructor(email) {\n//     this.email = email;\n//   }\n\n//   get email() {\n//     return this.email;\n//   }\n\n//   set email(newEmail) {\n//     this.email = newEmail;\n//   }\n// }\n\n// class Admin extends User {\n//   static role = {\n//     BASIC: 'basic',\n//     SUPERUSER: 'superuser',\n//   };\n\n//   constructor(params) {\n//     super(params.email);\n//     this.access = params.access;\n//     this.blacklistedEmails = [];\n//   }\n\n//   blacklist(email) {\n//     this.blacklistedEmails.push(email);\n//   }\n\n//   isBlacklisted(email) {\n//     return this.blacklistedEmails.includes(email);\n//   }\n// }\n\n// const mango = new Admin({\n//   email: 'mango@mail.com',\n//   access: Admin.role.SUPERUSER,\n// });\n\n// console.log(mango.email); // \"mango@mail.com\"\n// console.log(mango.access); // \"superuser\"\n\n// mango.blacklist('poly@mail.com');\n// console.log(mango.blacklistedEmails); // [\"poly@mail.com\"]\n// console.log(mango.isBlacklisted('mango@mail.com')); // false\n// console.log(mango.isBlacklisted('poly@mail.com')); // true\n\n////////////////////////////////////////////////////////////////////\n\n// const objC = { c: 'objC prop' };\n\n// const objB = Object.create(objC);\n// objB.b = 'objB prop';\n\n// const objA = Object.create(objB);\n// objA.a = 'objA prop';\n\n// console.log(objA); // { a: \"objA prop\", [[Prototype]]: objB }\n// console.log(objB); // { b: \"objB prop\", [[Prototype]]: objC }\n// console.log(objC); // { c: \"objC prop\", [[Prototype]]: Object }\n\n////////////////////////////////////////////////////////////////////////\n\n// const images = [\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820__480.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820_1280.jpg',\n//     description: 'Hokkaido Flower',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n//     description: 'Container Haulage Freight',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n//     description: 'Aerial Beach View',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n//     description: 'Flower Blooms',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n//     description: 'Alpine Mountains',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n//     description: 'Mountain Lake Sailing',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n//     description: 'Alpine Spring Meadows',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n//     description: 'Nature Landscape',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n//     description: 'Lighthouse Coast Sea',\n//   },\n// ];\n\n// function addId(images) {\n//   let numberId = 1;\n//   let newArray = [];\n\n//   for (const { preview, original, description, id = numberId } of images) {\n//     console.log(description, id);\n//     newArray.push(\n//       `{id: ${id}, preview: ${preview}, original: ${original}, description: ${description}}`\n//     );\n\n//     numberId += 1;\n//     // console.log(id);\n//   }\n//   return newArray;\n// }\n\n// console.log(addId(images));\n\n//////////////////////////////////////////////////////////////\n\n// function countBy(x, n) {\n//   let z = [];\n//   for (let index = 1; index <= n; index++) {\n//     z.push(x * index);\n//   }\n\n//   return z;\n// }\n\n// console.log(countBy(1, 10));\n// console.log(countBy(2, 5));\n\n/////////////////////////////////////////////////////////////\n\n// function past(h, m, s) {\n//   //#Happy Coding! ^_^\n//   return ((h * 60 + m) * 60 + s) * 1000;\n// }\n\n// console.log(past(1, 0, 0)); //3600000\n// console.log(past(1, 0, 1)); //3601000\n// console.log(past(0, 0, 0)); //0\n// console.log(past(1, 1, 1)); //3661000\n// console.log(past(0, 1, 1)); //61000\n\n/////////////////////////////////////////////\n\n// function findNeedle(haystack) {\n//   let el = '';\n//   let itEl = 0;\n//   itEl = haystack.indexOf('needle');\n//   return `found the needle at position ${itEl}`;\n// }\n\n// var haystack_1 = [\n//   '3',\n//   '123124234',\n//   undefined,\n//   'needle',\n//   'world',\n//   'hay',\n//   2,\n//   '3',\n//   true,\n//   false,\n// ];\n// var haystack_2 = [\n//   '283497238987234',\n//   'a dog',\n//   'a cat',\n//   'some random junk',\n//   'a piece of hay',\n//   'needle',\n//   'something somebody lost a while ago',\n// ];\n// var haystack_3 = [\n//   1,\n//   2,\n//   3,\n//   4,\n//   5,\n//   6,\n//   7,\n//   8,\n//   8,\n//   7,\n//   5,\n//   4,\n//   3,\n//   4,\n//   5,\n//   6,\n//   67,\n//   5,\n//   5,\n//   3,\n//   3,\n//   4,\n//   2,\n//   34,\n//   234,\n//   23,\n//   4,\n//   234,\n//   324,\n//   324,\n//   'needle',\n//   1,\n//   2,\n//   3,\n//   4,\n//   5,\n//   5,\n//   6,\n//   5,\n//   4,\n//   32,\n//   3,\n//   45,\n//   54,\n// ];\n\n// console.log(findNeedle(haystack_1));\n// console.log(findNeedle(haystack_2));\n// console.log(findNeedle(haystack_3));\n\n/////////////////////////////////////////////////////\n\nfunction abbrevName(name) {\n  //// варіант 0\n  // return name\n  //   .split(' ')\n  //   .map(x => x.substr(0, 1).toUpperCase())\n  //   .join('.');\n  ////варіант 1\n  // const nameArr = name.split(' ');\n  // return (nameArr[0][0] + '.' + nameArr[1][0]).toUpperCase();\n  //варіант 2 мій\n  //   const firstName = name.split(' ').slice(0, 1).join().toUpperCase();\n  //   const lastName = name.split(' ').slice(1, 2).join().toUpperCase();\n  //   return `${firstName[0]}.${lastName[0]}`;\n  ////варіант 3\n  //   return name\n  //     .split(' ')\n  //     .map(i => i[0].toUpperCase())\n  //     .join('.');\n}\n\n// console.log(abbrevName('sam Harris'));\n// console.log(abbrevName('Patrick Feenan'));\n// console.log(abbrevName('Evan Cole'));\n// console.log(abbrevName('P Favuzzi'));\n// console.log(abbrevName('David Mendieta'));\n\n///////////////////////////////////////////////////////////\n\n// function century(year) {\n//   return Math.ceil(year / 100);\n// }\n\n// console.log(century(1705)); // 18\n// console.log(century(1900)); // 19\n// console.log(century(1601)); // 17\n// console.log(century(2000)); // 20\n// console.log(century(89)); // 1\n\n//////////////////////////////////////////////////\n\n// const date = new Date();\n// console.log(new Date());\n\n// const date = new Date(2030, 0, 16, 14, 25, 0, 0);\n// console.log(date);\n\n///////////////////////////////////////////////\n\n// const startTime = Date.now();\n\n// // Твій код, виконуваний упродовж деякого часу\n// for (let i = 0; i <= 100; i += 1) {\n//   console.log(i);\n// }\n\n// const endTime = Date.now();\n// const elapsedTime = endTime - startTime;\n\n// console.log(`Elapsed time: ${elapsedTime} ms`);\n\n///////////////////////////////////////////////////////\n\n// const isSuccess = true;\n\n// // Create promise\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//       resolve('Success! Value passed to resolve function');\n//     } else {\n//       reject('Error! Error passed to reject function');\n//     }\n//   }, 2000);\n// });\n\n// // Registering promise callbacks\n// promise\n//   .then(value => console.log(value)) // \"Success! Value passed to resolve function\"\n//   .catch(error => console.log(error)) // \"Error! Error passed to reject function\"\n//   .finally(() => console.log('Promise settled')); // \"Promise settled\"\n\n////////////////////////////////////////////\n\n// const vvv = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     resolve(5);\n//   }, 2000);\n// });\n\n// console.log(vvv);\n\n// vvv\n//   .then(value => {\n//     console.log(value); // 5\n//     return value * 2;\n//   })\n//   .then(value => {\n//     console.log(value); // 10\n//     return value * 3;\n//   })\n//   .then(value => {\n//     console.log(value); // 30\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   })\n//   .finally(() => {\n//     console.log('finally');\n//   });\n\n// console.log(vvv);\n\n//////////////////////////////////////////////////////\n\n// const fetchUserFromServer = (username, onSuccess, onError) => {\n//   console.log(`Fetching data for ${username}`);\n\n//   setTimeout(() => {\n//     // Change value of isSuccess variable to simulate request status\n//     const isSuccess = true;\n\n//     if (isSuccess) {\n//       onSuccess('success value');\n//     } else {\n//       onError('error');\n//     }\n//   }, 2000);\n// };\n\n// fetchUserFromServer(\n//   'Mango',\n//   user => console.log(user),\n//   error => console.error(error)\n// );\n\n////////////////\n\n// const fetchUserFromServer = username => {\n//   return new Promise((resolve, reject) => {\n//     console.log(`Fetching data for ${username}`);\n\n//     setTimeout(() => {\n//       // Change value of isSuccess variable to simulate request status\n//       const isSuccess = true;\n\n//       if (isSuccess) {\n//         resolve('success value'); // значенням параметра resolve буде колбек-функція методу then()\n//       } else {\n//         reject('error'); // значенням параметра reject буде колбек-функція методу catch()\n//       }\n//     }, 2000);\n//   });\n// };\n\n// fetchUserFromServer('Mango') // результатом виклику fetchUserFromServer(\"Mango\") буде проміс\n//   .then(user => console.log(user)) // проміс обробляємо в методі then()\n//   .catch(error => console.error(error)); // проміс обробляємо в методі catch()\n\n/////////////////////////////////////////////////\n\n// const makeGreeting = guestName => {\n//   if (!guestName) {\n//     return Promise.reject('Guest name must not be empty');\n//   } else {\n//     return Promise.resolve(`Welcome ${guestName}`);\n//   }\n// };\n\n// makeGreeting('Mango')\n//   .then(greeting => console.log(greeting))\n//   .catch(error => console.error(error));\n\n/////////////////////////////////////////////////\n\n// const makePromise = ({ value, delai, shouldResolve }) => {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve(value);\n//       } else {\n//         reject(`error ${value}`);\n//       }\n//     }, delai);\n//   });\n// };\n\n// makePromise({ value: 'URRA 3000', delai: 3000, shouldResolve: true })\n//   .then(value => console.log(value))\n//   .catch(error => console.log(error));\n\n// makePromise({ value: 'URRA 4000', delai: 4000, shouldResolve: false })\n//   .then(value => console.log(value))\n//   .catch(error => console.log(error));\n\n// makePromise({ value: 'URRA 2000', delai: 2000, shouldResolve: true })\n//   .then(value => console.log(value))\n//   .catch(error => console.log(error));\n\n///////////////////////////////////////////////////\n\n// function evenOrOdd(number) {\n//   if (number % 2 === 0) {\n//     return 'Even';\n//   }\n//   return 'Odd';\n// }\n\n// console.log(evenOrOdd(2));\n\n///////////////////////////////////////////////\n\n// function booleanToString(b) {\n//   return String(b);\n// }\n\n// console.log(booleanToString(true));\n// console.log(booleanToString(false));\n\n///////////////////////////////////////////////////\n\n// function removeChar(str) {\n//   return str.slice(1, -1);\n// }\n\n// console.log(removeChar('edddddde'));\n\n////////////////////////////////////////////////////\n\n// function litres(time) {\n//   return Math.floor(time * 0.5);\n// }\n\n// console.log(litres(12.3));\n\n//////////////////////////////////////////////\n\n// const executor = (resolve, reject) => {\n//   setTimeout(() => {\n//     const isDone = Math.random() > 0.5;\n//     console.log(isDone);\n//     if (isDone) {\n//       resolve('Urrraaa!');\n//     } else {\n//       reject('Error!');\n//     }\n//   }, 1000);\n// };\n\n// const promise = new Promise(executor);\n\n// console.log(promise);\n\n// promise\n//   .then(result => {\n//     return result;\n//   })\n//   .then(data => {\n//     console.log(data);\n//     console.log(promise);\n//   })\n//   .catch(err => {\n//     console.log(err);\n//     console.log(promise);\n//   })\n//   .finally(() => {\n//     console.log('Finish!!!');\n//   });\n\n/////////////////\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     const isDone = Math.random() > 0.5;\n//     if (isDone) {\n//       resolve('Hello World!');\n//     } else {\n//       reject('error!');\n//     }\n//   }, 500);\n// });\n\n// promise\n//   .then(result => {\n//     return result;\n//   })\n//   .then(data => {\n//     console.log(data);\n//   })\n//   .catch(err => {\n//     console.log(err);\n//   })\n//   .finally(() => {\n//     console.log('Alles');\n//   });\n\n///////////////////////////////\n\n// function smash(words) {\n//   return words.join(' ').trim();\n// }\n\n// console.log(smash(['     hello', 'world', 'this', 'is', 'great ']));\n\n/////////////////////////////////////////////\n\n// function setAlarm(employed, vacation) {\n//   return employed && !vacation;\n//   // if (employed && !vacation) {\n//   //   return true;\n//   // }\n//   // return false;\n// }\n\n// console.log(setAlarm(true, false));\n// console.log(setAlarm(true, true));\n// console.log(setAlarm(false, false));\n// console.log(setAlarm(false, true));\n\n////////////////////////////////////////////\n\nfunction feast(beast, dish) {\n  const firstLetterBeast = beast.split(' ').slice(0, 1).join().toLowerCase()[0];\n  const lastLetterWord = beast.split(' ').slice(-1).join().toLowerCase();\n  const lastLetterBeast = lastLetterWord[lastLetterWord.length - 1];\n\n  const firstLetterDish = dish.split(' ').slice(0, 1).join().toLowerCase()[0];\n  const lastLetterWordDish = dish.split(' ').slice(-1).join().toLowerCase();\n  const lastLetterDish = lastLetterWordDish[lastLetterWordDish.length - 1];\n  return (\n    firstLetterBeast === firstLetterDish && lastLetterBeast === lastLetterDish\n  );\n}\nconsole.log(feast('great blue heron', 'garlic naan')); //, true);\nconsole.log(feast('chickadee', 'chocolate cake')); //, true);\nconsole.log(feast('brown bear', 'bear claw')); //, false);\n"],"names":["feast","beast","dish","firstLetterBeast","lastLetterWord","lastLetterBeast","firstLetterDish","lastLetterWordDish","lastLetterDish"],"mappings":"oDA86FA,SAASA,EAAMC,EAAOC,EAAM,CAC1B,MAAMC,EAAmBF,EAAM,MAAM,GAAG,EAAE,MAAM,EAAG,CAAC,EAAE,KAAI,EAAG,YAAa,EAAC,CAAC,EACtEG,EAAiBH,EAAM,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,KAAM,EAAC,YAAW,EAC9DI,EAAkBD,EAAeA,EAAe,OAAS,CAAC,EAE1DE,EAAkBJ,EAAK,MAAM,GAAG,EAAE,MAAM,EAAG,CAAC,EAAE,KAAI,EAAG,YAAa,EAAC,CAAC,EACpEK,EAAqBL,EAAK,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,KAAM,EAAC,YAAW,EACjEM,EAAiBD,EAAmBA,EAAmB,OAAS,CAAC,EACvE,OACEJ,IAAqBG,GAAmBD,IAAoBG,CAEhE,CACA,QAAQ,IAAIR,EAAM,mBAAoB,aAAa,CAAC,EACpD,QAAQ,IAAIA,EAAM,YAAa,gBAAgB,CAAC,EAChD,QAAQ,IAAIA,EAAM,aAAc,WAAW,CAAC"}